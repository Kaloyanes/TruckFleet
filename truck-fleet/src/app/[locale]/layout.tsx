import { Toaster } from "@/components/ui/toaster";
import MotionConfigProvider from "@/context/motion-config-provider";
import { ThemeProvider } from "@/context/theme-provider";
import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import { getMessages, setRequestLocale } from "next-intl/server";
import { Manrope, Plus_Jakarta_Sans, Roboto_Mono } from "next/font/google";
import "../globals.css";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";

// const jakarta = Plus_Jakarta_Sans({
// 	preload: true,
// 	weight: ["400", "500", "600", "700", "800"],
// 	subsets: ["cyrillic-ext", "latin"],
// 	display: "optional",
// });

const manrope = Manrope({
	preload: true,
	weight: ["400", "500", "600", "700", "800"],
	subsets: ["cyrillic", "latin"],
	display: "swap",
});

const roboto_mono = Roboto_Mono({
	subsets: ["latin"],
	display: "swap",
	variable: "--font-roboto-mono",
});

export function generateStaticParams() {
	try {
		return routing.locales.map((locale: string) => ({ locale }));
	} catch (err) {
		console.error("Error in getStaticProps:", err);
		throw err;
	}
}

export const metadata: Metadata = {
	title: {
		template: "%s | Truck Fleet",
		default: "Truck Fleet",
	},

	description: "Generated by create next app",
	icons: {
		icon: [
			{
				media: "(prefers-color-scheme: light)",
				url: "/packages_light.png",
				href: "/packages_light.png",
			},
			{
				media: "(prefers-color-scheme: dark)",
				url: "/packages_dark.png",
				href: "/packages_dark.png",
			},
		],
	},
};

export default async function RootLayout({
	children,
	params: { locale },
}: {
	children: React.ReactNode;
	params: { locale: string };
}) {
	// Ensure that the incoming `locale` is valid
	if (!routing.locales.includes(locale as any)) {
		notFound();
	}

	// Providing all messages to the client
	// side is the easiest way to get started
	const messages = await getMessages();

	return (
		<html lang={locale} suppressHydrationWarning>
			<head>
				<meta charSet="utf-8" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
			</head>
			<body
				className={manrope.className}
				// className={params.locale === "en" ? poppins.className : noto.className}
			>
				<MotionConfigProvider
					props={{
						reducedMotion: "user",
						transition: {
							bounce: 0.2,
							type: "spring",
						},
					}}
				>
					<ThemeProvider
						attribute="class"
						defaultTheme="system"
						enableSystem
						disableTransitionOnChange
					>
						<NextIntlClientProvider messages={messages}>
							<main>{children}</main>
							<Toaster />
						</NextIntlClientProvider>
					</ThemeProvider>
				</MotionConfigProvider>
			</body>
		</html>
	);
}
